// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace",
    "bindings": {
      "alt-e": "project_panel::ToggleFocus"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "ctrl-u": "editor::MovePageUp"
    }
  },
  {
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      "j k": "vim::SwitchToNormalMode"
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      "space n": "workspace::ToggleLeftDock",
      "-": "project_panel::ToggleFocus",
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      // https://github.com/zed-industries/zed/issues/4753
      // https://github.com/zed-industries/zed/issues/4270
      "escape": "project_panel::ToggleFocus",
      "enter": "project_panel::Open",
      "o": "project_panel::NewDirectory",
      "a": "project_panel::NewFile",
      "r": "project_panel::Rename",
      "x": "project_panel::Cut",
      "y": "project_panel::Copy",
      "p": "project_panel::Paste",
      "d": "project_panel::Delete",
      // Directory expansion
      "l": "project_panel::ExpandSelectedEntry",
      "h": "project_panel::CollapseSelectedEntry",
      // Move up and down
      "j": "menu::SelectNext",
      "k": "menu::SelectPrev"
      // "shift-d": "project_panel::Delete"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "j": "menu::SelectNext",
      "k": "menu::SelectPrev",
      "space o": "menu::Confirm",
      "space r": "project_panel::Rename",
      "z c": "project_panel::CollapseSelectedEntry",
      "z o": "project_panel::ExpandSelectedEntry",
      "space x": "project_panel::Cut",
      "space jc": "project_panel::Copy",
      "space p": "project_panel::Paste",
      "space d": "project_panel::Delete",
      "space a": "project_panel::NewFile",
      "shift-a": "project_panel::NewDirectory",
      "shift-y": "project_panel::CopyRelativePath",
      "g y": "project_panel::CopyPath"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "alt-h": "vim::Left",
      "alt-l": "vim::Right",
      "alt-j": "vim::Down",
      "alt-k": "vim::Up"
    }
  },
  {
    "context": "Editor && vim_mode == visual",
    "bindings": {
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "space e": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-/": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "Dock",

    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  }
]
